services:
  nodejs:
    container_name: nodejs
    image: nodejs
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_GUILD_ID: ${DISCORD_GUILD_ID}
    restart: always
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network

  database:
    container_name: database-container
    image: 'postgres:latest'
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: default_database
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./db-data/:/var/lib/postgresql/data/
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
